package com.ljredmond.p2;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class P2Solver {

    private static final int FIRST = 1;
    private static final int SECOND = 2;

    // for the given problem, use solve(4000000L)
    public long solve(long bound) {
        long prevPrev = FIRST;
        long prev = SECOND;
        long sum = (isEven(FIRST) ? FIRST : 0L) + (isEven(SECOND) ? SECOND : 0L);

        while (prevPrev + prev < bound) {
            long current = prevPrev + prev;
            sum += (isEven(current) ? current : 0L);
            prevPrev = prev;
            prev = current;
        }

        return sum;
    }

    private boolean isEven(long n) {
        return n % 2 == 0;
    }
}
